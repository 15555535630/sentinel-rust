name: CI

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main
  schedule: 
    - cron: '0 0 * * 0' # Sunday

env:
  RUSTC: 1.53.0

jobs:
  # Depends on all actions that are required for a "successful" CI run.
  ci:
    name: CI
    runs-on: ubuntu-latest
    needs:
      - check
      - test-single
      - test-parallel
      - clippy
      - fmt
      - docs
      - check-readme
    steps:
      - run: exit 0

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo check

  test-single:
    name: Ignored Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo test -- --ignored --test-threads=1
        
  test-parallel:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo test

  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: "rustfmt --check"
        run: |
          if ! rustfmt --check --edition 2018 $(find . -name '*.rs' -print); then
            printf "Please run \`rustfmt --edition 2018 \$(find . -name '*.rs' -print)\` to fix rustfmt errors.\nSee CONTRIBUTING.md for more details.\n" >&2
            exit 1
          fi
          
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: Install clippy
        run: rustup component add clippy
      - name: "clippy --all"
        run: cargo clippy --all --tests --all-features

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo doc --lib --no-deps --all-features --document-private-items

  check-readme:
    name: Check README # for correct README file on crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Verify that both READMEs are identical 
        run: diff README.md sentinel/README.md

      - name: Verify that Sentinel version is up to date in README
        working-directory: sentinel
        run: grep -q "$(sed '/^version = /!d' Cargo.toml | head -n1)" README.md
        